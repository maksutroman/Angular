#!groovy
//  groovy Jenkinsfile
properties([disableConcurrentBuilds()])

pipeline  {
    agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Create docker image") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build -t maksutroman/angular-event-scheduler . "
                }
            }
        }
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                    docker login -u $USERNAME -p $PASSWORD
                    '''
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== pushing image =================="
                sh '''
                docker push maksutroman/angular-event-scheduler:latest
                '''
            }
        }
        //kkkk
        //stage("docker stop") {
        //    steps {
        //        echo " ============== stoping all images =================="
        //        sh '''
        //        docker stop angular-event-scheduler
        //        '''
        //    }
        //} 
        //stage("docker remove") {
        //    steps {
        //        echo " ============== removing all docker containers =================="
        //        sh '''
        //        docker rm angular-event-scheduler
        //        '''
        //    }
       // }
       // stage("docker run") {
       //     steps {
        //        echo " ============== starting chatterbox =================="
       //         sh '''
        //        docker run -d --restart=always --name angular-event-scheduler -p 3000:3000 maksutroman/angular-event-scheduler
        //        '''
        //    }
       // }
        // stage("Deploy to stage server") {
        //     steps {
        //         echo " ============== Running playbook =================="
        //         sh '''
        //         ansible-playbook toolbox/ansible/playbooks/demloyToStageServer.yml
        //         '''
        //     }
        //}

    }
}